image:
  name: "docker/compose:latest"
  entrypoint: ["/bin/sh", "-c"]

services:
  - docker:dind


stages:
  - build
  - push
  - test
#  - deploy


before_script:
- docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

after_script:
- docker logout "$CI_REGISTRY"

.do_testing:
  stage: test
  allow_failure: false
  image: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  script:
    - python -m pytest

#.do_testing:
#  stage: test
#  allow_failure: false
#  script:
#    - echo "$CI_REGISTRY_IMAGE"
#    - echo $CI_REGISTRY
#    - cd ml/predict/
#    - ls
#    - if [ -d "env_predict/bin/activate" ]; then rm -Rf $WORKING_DIR; fi
#    - docker pull $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
#    - docker run $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
#    - docker exec -it $IMAGE_NAME bash -c "pytest -v

test:predict:
  variables:
    IMAGE_NAME: nyt_news-prediction
  extends: .do_testing

build:
  stage: build
  before_script:
    - echo "$CI_REGISTRY_IMAGE"
    - echo $CI_REGISTRY
    - echo MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME >> .env         # Add here!
    - echo MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD >> .env
    - echo MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE >> .env
    - echo MONGOEXPRESS_PASSWORD=$MONGOEXPRESS_PASSWORD >> .env
    - echo MONGOEXPRESS_LOGIN=$MONGOEXPRESS_LOGIN >> .env
    - echo USER1=$USER1 >> .env
    - echo PASSWORD1=$PASSWORD1 >> .env
    - ls -a
  script:
    - docker-compose build --pull


.template: &push_image
  needs: ["build"]
  before_script:
    - echo "$CI_REGISTRY_IMAGE"
    # Tag the container image from latest to the commit ref
    - docker tag "$CI_REGISTRY_IMAGE/$IMAGE_NAME:latest" "$CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA"
  script:
    # Push the container image
    - docker push "$CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA"
    # If we are building a tag, push the `latest` container image tag too
#    - if [ ! -z "$CI_COMMIT_TAG" ]; then docker push "$CI_REGISTRY_IMAGE/$IMAGE_NAME:latest"; fi

push:predict:
  <<: *push_image
  stage: push
  variables:
    IMAGE_NAME: nyt_news-prediction


#deploy:
#  stage: deploy
#  script:
#  - docker-compose pull
#  - docker-compose up -d